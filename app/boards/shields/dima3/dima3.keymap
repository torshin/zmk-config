/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NUM     3
#define THIRD   4

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
          bindings = <
&kp GRAVE     &kp Q &kp W &kp E    &kp R       &kp T                                                                       &kp Y            &kp U     &kp I     &kp O    &kp P     &kp LBRC
&mt LCTRL ESC &kp A &kp S &kp D    &kp F       &kp G                                                                       &kp H            &kp J     &kp K     &kp L    &kp SEMI  &kp SQT
&kp LALT      &kp Z &kp X &kp C    &kp V       &kp B         &mo NUM                                        &kp LG(SPACE)  &kp N            &kp M     &kp COMMA &kp DOT  &kp FSLH  &kp RBRC
                          &kp LGUI &kp LS(TAB) &lt RAISE TAB &mt LSHFT SPACE &lt LOWER DEL    &lt LOWER ESC &mt RSHFT BSPC &lt RAISE ENTER  &kp RSHFT &kp NUBS
            >;
        };
        lower_layer {
          bindings = <
&kp F12         &kp F1   &kp F2 &kp F3    &kp F4    &kp F5                                      &kp F6          &kp F7    &kp F8    &kp F9    &kp F10  &kp F11
&mt LCTRL PLUS  &kp EXCL &kp AT &kp HASH  &kp DLLR  &kp PRCNT                                   &kp CARET       &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR &mt RCTRL UNDER
&mt LALT EQUAL  &kp N1   &kp N2 &kp N3    &kp N4    &kp N5         &trans                &trans &kp N6          &kp N7    &kp N8    &kp N9    &kp N0   &mt RALT MINUS
                                &trans    &trans    &lt THIRD TAB  &trans &trans  &trans &trans &lt THIRD ENTER &trans    &trans
          >;
        };
        raise_layer {
          bindings = <
&trans    &kp SLCK  &kp PG_UP     &kp UP    &kp LC(HOME)  &kp C_VOL_UP                                                 &kp RA(T)  &kp HOME  &kp UP    &kp PG_UP &kp SLCK        &trans
&kp LCTRL &kp INS   &kp LC(LEFT)  &kp DOWN  &kp LC(RIGHT) &kp C_PP                                                     &kp C_MUTE &kp LEFT  &kp DOWN  &kp RIGHT &kp INS         &kp K_APP
&trans    &trans    &kp PG_DN     &kp PSCRN &kp LC(END)   &kp C_VOL_DN &trans                                  &trans  &kp RA(M)  &kp END   &kp PSCRN &kp PG_DN &kp PAUSE_BREAK &trans
                                  &trans    &trans        &trans       &trans &lt THIRD DEL     &lt THIRD ESC  &trans  &trans     &trans    &trans
          >;
        };
        num_layer {
 bindings = <
&kp KP_NUM &kp KP_SLASH     &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_MINUS                                 &kp RA(T) &trans &trans        &trans       &trans       &trans
&kp K_CALC &kp KP_ASTERISK  &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_PLUS                                  &trans    &trans &trans        &trans       &trans       &trans
&kp DOT    &kp KP_N0        &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp DOT      &trans                   &trans &kp RA(M) &trans &kp RA(COMMA) &kp RA(DOT) &kp RA(FSLH) &kp RA(RBRC)
                                        &trans   &trans    &trans       &trans  &trans  &trans   &trans &trans    &trans &kp RA(NUBS)
  >;
        };

        third_layer {
          bindings = <
&trans  &trans      &trans          &trans        &trans        &trans                                         &trans &trans       &trans  &trans &trans &trans
&trans  &trans      &trans          &trans        &trans        &trans                                         &trans &trans       &trans  &trans &trans &trans
&trans  &bt BT_CLR  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &kp K_LOCK  &trans                     &trans  &trans &trans       &trans  &trans &trans &trans
                                    &trans        &trans   &trans      &trans   &trans    &trans  &trans  &trans &trans  &trans
          >;
        };
    };
};
